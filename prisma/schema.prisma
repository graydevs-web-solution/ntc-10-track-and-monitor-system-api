generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model system_settings {
  id      Int    @unique @default(autoincrement())
  setting String
  value   String
}

model users {
  user_id                     String                  @id @db.Uuid
  name_first                  String                  @db.VarChar(250)
  name_middle                 String                  @db.VarChar(250)
  name_last                   String                  @db.VarChar(250)
  user_name                   String                  @db.VarChar(20)
  position                    String                  @db.VarChar(250)
  password                    String
  token                       String?
  reset_token_expiration_date DateTime?               @db.Date
  regional_director_rt        radio_transceivers[]    @relation("RegDirRT")
  noted_by_rt                 radio_transceivers[]    @relation("NotedByRT")
  regional_director_mp        mobile_phone_dealers[]  @relation("RegDirMP")
  noted_by_mp                 mobile_phone_dealers[]  @relation("NotedByMP")
  regional_director_sc        service_center_report[] @relation("RegDirSC")
  noted_by_sc                 service_center_report[] @relation("NotedBySC")
  regional_director_rd        radio_dealers[]         @relation("RegDirRD")
  regional_director_com       complaint[]             @relation("RegDirCom")
  regional_director_def       deficiency_notice[]     @relation("RegDirDef")
  attorney                    accomplishment_report[] @relation("AttorneyAR")
}

model clients {
  clientId                  String                  @id @db.Uuid
  owner_name                String                  @db.VarChar(250)
  owner_position            String                  @db.VarChar(250)
  business_name             String                  @db.VarChar(250)
  business_address          String?                 @db.VarChar(250)
  cellphoneNumber           String?                 @db.VarChar(11)
  faxNumber                 String?                 @db.VarChar(15)
  exactLocation             String?                 @db.VarChar(250)
  secDtiRegistrationNumber  String?                 @db.VarChar(250)
  businessMayorPermitNumber String?                 @db.VarChar(250)
  id                        Int                     @unique @default(autoincrement())
  radio_transceivers        radio_transceivers[]
  mobile_phone_dealers      mobile_phone_dealers[]
  service_center_report     service_center_report[]
  radio_dealers             radio_dealers[]
  deficiency_notice         deficiency_notice[]
  complaint                 complaint[]
}

model accomplishment_report {
  id                          Int     @id @default(autoincrement())
  month                       Int
  year                        Int
  description                 String? @db.VarChar(250)
  number_of_admin_case        Int
  number_of_show_case         Int
  number_of_hearing           Int
  number_of_pending_complaint Int
  number_of_resolved          Int
  attorney                    String  @db.Uuid
  attorney_info               users?  @relation("AttorneyAR", fields: [attorney], references: [user_id])
}

model radio_transceiver_items {
  radio_transceiver_id Int?
  model                String?             @db.VarChar(250)
  serial_number        String?             @db.VarChar(250)
  freq_range           String?             @db.VarChar(250)
  power_output         String?             @db.VarChar(250)
  freq_control         String?             @db.VarChar(250)
  id                   Int                 @id @unique @default(autoincrement())
  radio_transceivers   radio_transceivers? @relation(fields: [radio_transceiver_id], references: [id])
}

model radio_transceiver_receivers {
  radio_transceiver_id Int?
  name                 String?             @db.VarChar(250)
  serial_number        String?             @db.VarChar(250)
  freq_range           String?             @db.VarChar(250)
  power_output         String?             @db.VarChar(250)
  freq_control         String?             @db.VarChar(250)
  id                   Int                 @id @unique @default(autoincrement())
  radio_transceivers   radio_transceivers? @relation(fields: [radio_transceiver_id], references: [id])
}

model radio_transceiver_others {
  radio_transceiver_id Int?
  name                 String?             @db.VarChar(250)
  serial_number        String?             @db.VarChar(250)
  freq_range           String?             @db.VarChar(250)
  power_output         String?             @db.VarChar(250)
  freq_control         String?             @db.VarChar(250)
  id                   Int                 @id @unique @default(autoincrement())
  radio_transceivers   radio_transceivers? @relation(fields: [radio_transceiver_id], references: [id])
}

model radio_transceiver_operators {
  radio_transceiver_id  Int?
  name                  String?             @db.VarChar(250)
  particular_of_license String?             @db.VarChar(250)
  expiration_date       DateTime?           @db.Date
  id                    Int                 @id @default(autoincrement())
  radio_transceivers    radio_transceivers? @relation(fields: [radio_transceiver_id], references: [id])
}

model radio_transceivers {
  id                                           Int                           @id @default(autoincrement())
  date_issued                                  DateTime?                     @db.Timestamptz(6)
  client_id                                    Int?
  class_type                                   String?                       @db.VarChar(250)
  nature_of_service                            String?                       @db.VarChar(250)
  working_hours                                String?                       @db.VarChar(250)
  form_type                                    String?                       @db.VarChar(250)
  call_sign                                    String?                       @db.VarChar(250)
  motor_number                                 String?                       @db.VarChar(250)
  plate_number                                 String?                       @db.VarChar(250)
  gross_tonnage                                String?                       @db.VarChar(250)
  pp_number                                    String?                       @db.VarChar(250)
  pp_date_issued                               DateTime?                     @db.Timestamptz(6)
  tp_number                                    String?                       @db.VarChar(250)
  tp_expiration_date                           DateTime?                     @db.Timestamptz(6)
  cp_number                                    String?                       @db.VarChar(250)
  cp_expiration_date                           DateTime?                     @db.Timestamptz(6)
  license_number                               String?                       @db.VarChar(250)
  license_expiration_date                      DateTime?                     @db.Timestamptz(6)
  points_of_communication                      String?                       @db.VarChar(250)
  freq_assigned_freq                           String?                       @db.VarChar(250)
  freq_crystal_freq                            String?                       @db.VarChar(250)
  freq_measured_freq                           String?                       @db.VarChar(250)
  freq_if_receiver                             String?                       @db.VarChar(250)
  freq_type_of_emission                        String?                       @db.VarChar(250)
  as_type                                      String?                       @db.VarChar(250)
  as_elevation_from_gmd                        String?                       @db.VarChar(250)
  as_length_of_radiator                        String?                       @db.VarChar(250)
  as_gain                                      String?                       @db.VarChar(250)
  as_directivity                               String?                       @db.VarChar(250)
  as_power_supply                              String?                       @db.VarChar(250)
  as_battery                                   String?                       @db.VarChar(250)
  as_voltage_and_type                          String?                       @db.VarChar(250)
  as_capacity                                  String?                       @db.VarChar(250)
  as_ah                                        String?                       @db.VarChar(250)
  illegal_construction_without_permit          Boolean?
  illegal_transfer                             Boolean?
  operation_without_rsl                        Boolean?
  operation_without_lro                        Boolean?
  operation_without_logbook                    Boolean?
  operation_on_lower_sideband                  Boolean?
  operation_on_unauthorized_hours              Boolean?
  operation_operating_unauthorized_freq        Boolean?
  off_frequency                                Boolean?
  still_in_the_old_frequency_grouping          Boolean?
  illegal_possession                           Boolean?
  others                                       String?                       @db.VarChar(250)
  sundray_info_radio_operator_logbook          String?                       @db.VarChar(250)
  sundray_info_station_product_unwanted_signal String?                       @db.VarChar(250)
  sundray_info_radio_equipment_operative       String?                       @db.VarChar(250)
  recommendations                              String?                       @db.VarChar(250)
  authorized_representative                    String?                       @db.VarChar(250)
  radio_requlation_inspector                   String?                       @db.VarChar(250)
  noted_by                                     String                        @db.Uuid
  regional_director                            String                        @db.Uuid
  clients                                      clients?                      @relation(fields: [client_id], references: [id])
  regional_director_info                       users?                        @relation("RegDirRT", fields: [regional_director], references: [user_id])
  noted_by_info                                users?                        @relation("NotedByRT", fields: [noted_by], references: [user_id])
  radio_transceiver_items                      radio_transceiver_items[]
  radio_transceiver_operators                  radio_transceiver_operators[]
  radio_transceiver_receivers                  radio_transceiver_receivers[]
  radio_transceiver_others                     radio_transceiver_others[]
}

model spares_and_accessories {
  mobile_phone_dealer_id Int?
  particular             String?               @db.VarChar(250)
  number_of_units        Int?
  id                     Int                   @id @unique @default(autoincrement())
  mobile_phone_dealers   mobile_phone_dealers? @relation(fields: [mobile_phone_dealer_id], references: [id])
}

model mobile_phones {
  mobile_phone_dealer_id Int?
  model                  String?               @db.VarChar(250)
  imei_number            String?               @db.VarChar(250)
  source                 String?               @db.VarChar(250)
  id                     Int                   @id @unique @default(autoincrement())
  mobile_phone_dealers   mobile_phone_dealers? @relation(fields: [mobile_phone_dealer_id], references: [id])
}

model sim {
  mobile_phone_dealer_id Int?
  sim_number             String?               @db.VarChar(250)
  mobile_phone_company   String?               @db.VarChar(250)
  id                     Int                   @id @unique @default(autoincrement())
  mobile_phone_dealers   mobile_phone_dealers? @relation(fields: [mobile_phone_dealer_id], references: [id])
}

model mobile_phone_dealers {
  id                                       Int                      @id @default(autoincrement())
  date_inspected                           DateTime?                @db.Timestamptz(6)
  client_id                                Int?
  permit_number                            String?                  @db.VarChar(250)
  permit_expiry_date                       DateTime?                @db.Timestamptz(6)
  sundry_one                               String?                  @db.VarChar(250)
  sundry_two                               String?                  @db.VarChar(250)
  remarks_deficiencies_discrepancies_noted String?                  @db.VarChar(250)
  inspected_by                             String?                  @db.VarChar(250)
  owner_name                               String?                  @db.VarChar(250)
  owner_position                           String?                  @db.VarChar(250)
  recommendations                          String?                  @db.VarChar(250)
  noted_by                                 String?                  @db.Uuid
  regional_director                        String?                  @db.Uuid
  is_approved                              Boolean?
  clients                                  clients?                 @relation(fields: [client_id], references: [id])
  regional_director_info                   users?                   @relation("RegDirMP", fields: [regional_director], references: [user_id])
  noted_by_info                            users?                   @relation("NotedByMP", fields: [noted_by], references: [user_id])
  spares_and_accessories                   spares_and_accessories[]
  mobile_phones                            mobile_phones[]
  sim                                      sim[]
}

model list_of_service_or_test_equipments {
  service_center_report_id Int?
  particular               String?                @db.VarChar(250)
  number_of_units          Int?
  id                       Int                    @id @unique @default(autoincrement())
  service_center_report    service_center_report? @relation(fields: [service_center_report_id], references: [id])
}

model employed_electronics_technicians {
  service_center_report_id Int?
  name                     String?                @db.VarChar(250)
  qualifications           String?                @db.VarChar(250)
  id                       Int                    @id @unique @default(autoincrement())
  service_center_report    service_center_report? @relation(fields: [service_center_report_id], references: [id])
}

model service_center_report {
  id                                       Int                                  @id @default(autoincrement())
  date_inspected                           DateTime?                            @db.Timestamptz(6)
  client_id                                Int?
  permit_number                            String?                              @db.VarChar(250)
  permit_expiry_date                       DateTime?                            @db.Timestamptz(6)
  sundry_one                               String?                              @db.VarChar(250)
  sundry_two                               String?                              @db.VarChar(250)
  sundry_three                             String?                              @db.VarChar(250)
  remarks_deficiencies_discrepancies_noted String?                              @db.VarChar(250)
  inspected_by                             String?                              @db.VarChar(250)
  owner_name                               String?                              @db.VarChar(250)
  owner_position                           String?                              @db.VarChar(250)
  recommendations                          String?                              @db.VarChar(250)
  noted_by                                 String?                              @db.Uuid
  regional_director                        String?                              @db.Uuid
  is_approved                              Boolean?
  clients                                  clients?                             @relation(fields: [client_id], references: [id])
  regional_director_info                   users?                               @relation("RegDirSC", fields: [regional_director], references: [user_id])
  noted_by_info                            users?                               @relation("NotedBySC", fields: [noted_by], references: [user_id])
  list_of_service_or_test_equipments       list_of_service_or_test_equipments[]
  employed_electronics_technicians         employed_electronics_technicians[]
}

model supervising_ece {
  radio_dealer_id Int?
  name            String?        @db.VarChar(250)
  license_number  String?        @db.VarChar(250)
  expiry_date     DateTime?
  ptr_number      String?        @db.VarChar(250)
  date_issued     DateTime?
  id              Int            @id @unique @default(autoincrement())
  radio_dealers   radio_dealers? @relation(fields: [radio_dealer_id], references: [id])
}

model radio_technicians {
  radio_dealer_id        Int?
  name                   String?        @db.VarChar(250)
  particulars_of_license String?        @db.VarChar(250)
  expiry_date            DateTime?
  id                     Int            @id @unique @default(autoincrement())
  radio_dealers          radio_dealers? @relation(fields: [radio_dealer_id], references: [id])
}

model radio_dealers {
  id                            Int                 @id @default(autoincrement())
  date_inspected                DateTime?           @db.Timestamptz(6)
  permit_number                 String?             @db.VarChar(250)
  permit_expiry_date            DateTime?           @db.Timestamptz(6)
  client_id                     Int?
  dtemi_reflectometer           Boolean?
  dtemi_frequency_counter       Boolean?
  dtemi_power_meter             Boolean?
  dtemi_vtvm_digital_multimeter Boolean?
  dtemi_signal_generator        Boolean?
  dtemi_oscilloscope            Boolean?
  dtemi_vom_digital_multimeter  Boolean?
  dtemi_dummy_load_antenna      Boolean?
  is_laboratory_room_shielded   Boolean?
  remarks                       String?             @db.VarChar(250)
  radio_regulation_inspector    String?             @db.VarChar(250)
  owner_name                    String?             @db.VarChar(250)
  recommendations               String?             @db.VarChar(250)
  regional_director             String?             @db.Uuid
  clients                       clients?            @relation(fields: [client_id], references: [id])
  regional_director_info        users?              @relation("RegDirRD", fields: [regional_director], references: [user_id])
  supervising_ece               supervising_ece[]
  radio_technicians             radio_technicians[]
}

model deficiency_notice_transmitter {
  deficiency_notice_id Int?
  transmitter          String?            @db.VarChar(250)
  serial_number        String?            @db.VarChar(250)
  id                   Int                @id @unique @default(autoincrement())
  deficiency_notice    deficiency_notice? @relation(fields: [deficiency_notice_id], references: [id])
}

model deficiency_notice {
  id                                   Int                             @id @default(autoincrement())
  date                                 DateTime?                       @db.Timestamptz(6)
  client_id                            Int?
  respondent_name                      String?                         @db.VarChar(250)
  date_of_inspection                   DateTime?                       @db.Timestamptz(6)
  docket_number                        String?                         @db.VarChar(250)
  vi_operation_without_rsl             Boolean?
  vi_operation_without_lro             Boolean?
  vi_operation_unauthorized_frequency  Boolean?
  vi_possession_transmitter_without_pp Boolean?
  vi_no_ntc_pertinent_papers           Boolean?
  date_of_deficiency_hearing           DateTime?                       @db.Timestamptz(6)
  is_done                              Boolean?
  regional_director                    String?                         @db.Uuid
  clients                              clients?                        @relation(fields: [client_id], references: [id])
  regional_director_info               users?                          @relation("RegDirDef", fields: [regional_director], references: [user_id])
  deficiency_notice_transmitter        deficiency_notice_transmitter[]
}

model complaint_transmitter {
  complaint_id  Int?
  transmitter   String?    @db.VarChar(250)
  serial_number String?    @db.VarChar(250)
  id            Int        @id @unique @default(autoincrement())
  complaint     complaint? @relation(fields: [complaint_id], references: [id])
}

model complaint {
  id                                   Int                     @id @default(autoincrement())
  date                                 DateTime?               @db.Timestamptz(6)
  client_id                            Int?
  complainant_name                     String?                 @db.VarChar(250)
  respondent_name                      String?                 @db.VarChar(250)
  docket_number                        String?                 @db.VarChar(250)
  date_of_inspection                   DateTime?               @db.Timestamptz(6)
  location                             String?                 @db.VarChar(250)
  reason                               String?                 @db.VarChar(250)
  vi_operation_without_rsl             Boolean?
  vi_operation_without_lro             Boolean?
  vi_operation_unauthorized_frequency  Boolean?
  vi_possession_transmitter_without_pp Boolean?
  vi_no_ntc_pertinent_papers           Boolean?
  date_time_of_hearing                 DateTime?               @db.Timestamptz(6)
  is_done                              Boolean?
  regional_director                    String?                 @db.Uuid
  clients                              clients?                @relation(fields: [client_id], references: [id])
  regional_director_info               users?                  @relation("RegDirCom", fields: [regional_director], references: [user_id])
  complaint_transmitter                complaint_transmitter[]
}
